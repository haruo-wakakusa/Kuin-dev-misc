var lineBrush: draw2d@Brush
var rectBrush1: draw2d@Brush
var rectBrush2: draw2d@Brush
var circleBrush1: draw2d@Brush
var circleBrush2: draw2d@Brush
var icecreamBrush: draw2d@Brush
var cornBrush: draw2d@Brush
var geo917Brush: draw2d@Brush
var icecream: draw2d@GeometryPath
var geo917: draw2d@GeometryPath

func main()
	var wnd: wnd@Wnd :: wnd@makeWnd(null, %aspect, 800, 600,
	|"draw2dライブラリサンプル3")
	var draw: wnd@Draw :: wnd@makeDraw(wnd, 0, 0, 800, 600,
	|%scale, %scale, false)
	
	do @icecream :: draw2d@makeGeometryPath()
	do @icecream.open()
	do @icecream.openFigure(250.0, 250.0, true)
	do @icecream.addArc(50.0, 250.0, 100.0, 100.0, lib@pi,
	|true, false)
	do @icecream.closeFigure(true)
	do @icecream.close()
	
	do @geo917 :: draw2d@makeGeometryPath()
	do @geo917.open()
	do @geo917.openFigure(370.0, 250.0, false)
	do @geo917.addBezier(360.0, 200.0, 220.0, 220.0, 270.0, 270.0)
	do @geo917.addQuadraticBezier(300.0, 300.0, 368.0, 255.0)
	do @geo917.addLine(290.0, 400.0)
	do @geo917.closeFigure(false)
	do @geo917.openFigure(460.0, 225.0, false)
	do @geo917.addLine(370.0, 400.0)
	do @geo917.closeFigure(false)
	do @geo917.openFigure(500.0, 230.0, false)
	do @geo917.addLine(610.0, 230.0)
	do @geo917.addQuadraticBezier(520.0, 270.0, 480.0, 400.0)
	do @geo917.closeFigure(false)
	do @geo917.close()
	
	do @lineBrush :: draw2d@makeBrushLinearGradient(
	|20.0, 20.0, 200.0, 100.0,
	|[0.0, 0.5, 1.0],
	|[0xFFFF4444, 0xFFFFCCCC, 0xFFFF4444])
	do @rectBrush1 :: draw2d@makeBrushLinearGradient(
	|250.0, 50.0, 400.0, 50.0,
	|[0.0, 1.0],
	|[0xFFFFFFFF, 0xFF888888])
	do @rectBrush2 :: draw2d@makeBrushLinearGradient(
	|250.0, 50.0, 400.0, 50.0,
	|[0.0, 1.0],
	|[0xFF888888, 0xFF000000])
	do @circleBrush1 :: draw2d@makeBrushLinearGradient(
	|500.0, 50.0, 500.0, 150.0,
	|[0.0, 1.0],
	|[0xFFFF0000, 0xFF0000FF])
	do @circleBrush2 :: draw2d@makeBrushLinearGradient(
	|500.0, 50.0, 500.0, 150.0,
	|[0.0, 1.0],
	|[0xFFFF0000, 0xFF0000FF])
	do @icecreamBrush :: draw2d@makeBrushLinearGradient(
	|50.0, 180.0, 250.0, 220.0,
	|[0.0, 0.45, 1.0],
	|[0xFFAAFFBB, 0xFFFFFFCC, 0xFFFFCCCC])
	do @cornBrush :: draw2d@makeBrushLinearGradient(
	|200.0, 200.0, 200.0, 600.0,
	|@divide(0.0, 1.0, 40),
	|[0xFFDDCC88, 0xFF998844].repeat(20))
	do @geo917Brush :: draw2d@makeBrushLinearGradient(
	|600.0, 200.0, 200.0, 500.0,
	|[0.0, 0.48, 1.0],
	|[0xFFBBBBFF, 0xFF0000CC, 0xFFCCCCFF])
	do draw.onPaint :: @onPaint
	do draw.paint()
	while(wnd@act())
	end while
end func

func divide(sx: float, ex: float, div: int): []float
	var ary: []float :: #[div]float
	do ary[0] :: sx
	do ary[div - 1] :: ex
	for i(1, div - 2)
		do ary[i] :: sx + (ex - sx) * i $ float / (div - 1) $ float
	end for
	ret ary
end func

func onPaint(wnd: wnd@Wnd, width: int, height: int)
	; k
	do @lineBrush.line(20.0, 20.0, 20.0, 100.0, 3.0, null)
	do @lineBrush.line(60.0, 40.0, 16.0, 80.0, 3.0, null)
	do @lineBrush.line(30.0, 77.0, 60.0, 100.0, 3.0, null)
	; u
	do @lineBrush.line(80.0, 50.0, 80.0, 100.0, 3.0, null)
	do @lineBrush.line(80.0, 98.5, 120.0, 98.5, 3.0, null)
	do @lineBrush.line(120.0, 100.0, 120.0, 50.0, 3.0, null)
	; i
	do @lineBrush.line(140.0, 40.0, 140.0, 100.0, 3.0, null)
	; n
	do @lineBrush.line(160.0, 50.0, 160.0, 100.0, 3.0, null)
	do @lineBrush.line(160.0, 51.5, 200.0, 51.5, 3.0, null)
	do @lineBrush.line(200.0, 50.0, 200.0, 100.0, 3.0, null)
	
	do @rectBrush1.rect(250.0, 20.0, 150.0, 120.0)
	do @rectBrush2.rectLine(250.0, 20.0, 150.0, 120.0, 5.0, null)
	
	do @circleBrush1.circle(500.0, 100.0, 50.0, 50.0)
	do @circleBrush2.circleLine(500.0, 100.0, 50.0, 50.0, 10.0, null)
	
	do @icecreamBrush.draw(@icecream)
	do @cornBrush.tri(50.0, 250.0, 250.0, 250.0, 150.0, 500.0)
	
	do @geo917Brush.drawLine(@geo917, 10.0)
	do draw@render(0)
end func
