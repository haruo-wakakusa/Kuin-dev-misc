var dc: dc@DC
var lineBrush: dc@Brush
var rectBrush1: dc@Brush
var rectBrush2: dc@Brush
var circleBrush1: dc@Brush
var circleBrush2: dc@Brush
var icecreamBrush: dc@Brush
var cornBrush: dc@Brush
var geo917Brush: dc@Brush
var icecream: dc@PathGeometry
var geo917: dc@PathGeometry

func main()
	var wnd: wnd@Wnd :: wnd@makeWnd(null, %aspect, 800, 600,
	|"dcライブラリサンプル3")
	var draw: wnd@Draw :: wnd@makeDraw(wnd, 0, 0, 800, 600,
	|%scale, %scale, false)
	
	do @icecream :: dc@makePathGeometry()
	var sink: dc@GeometrySink :: @icecream.open()
	do sink.beginFigure(250.0, 250.0, %filled)
	do sink.addArc(50.0, 250.0, 100.0, 100.0, lib@pi,
	|%counterClockwise, %small)
	do sink.endFigure(%closed)
	do sink.close()
	
	do @geo917 :: dc@makePathGeometry()
	do sink :: @geo917.open()
	do sink.beginFigure(370.0, 250.0, %hollow)
	do sink.addBezier(360.0, 200.0, 220.0, 220.0, 270.0, 270.0)
	do sink.addQuadraticBezier(300.0, 300.0, 368.0, 255.0)
	do sink.addLine(290.0, 400.0)
	do sink.endFigure(%open)
	do sink.beginFigure(460.0, 225.0, %hollow)
	do sink.addLine(370.0, 400.0)
	do sink.endFigure(%open)
	do sink.beginFigure(500.0, 230.0, %hollow)
	do sink.addLine(610.0, 230.0)
	do sink.addQuadraticBezier(520.0, 270.0, 480.0, 400.0)
	do sink.endFigure(%open)
	do sink.close()
	
	do @dc :: dc@makeDC(draw)
	do @lineBrush :: @dc.makeLinearGradientBrush(
	|20.0, 20.0, 200.0, 100.0,
	|[0.0, 0.5, 1.0],
	|[0xFFFF4444, 0xFFFFCCCC, 0xFFFF4444],
	|%normal, %clamp)
	do @rectBrush1 :: @dc.makeLinearGradientBrush(
	|250.0, 50.0, 400.0, 50.0,
	|[0.0, 1.0],
	|[0xFFFFFFFF, 0xFF888888],
	|%normal, %clamp)
	do @rectBrush2 :: @dc.makeLinearGradientBrush(
	|250.0, 50.0, 400.0, 50.0,
	|[0.0, 1.0],
	|[0xFF888888, 0xFF000000],
	|%normal, %clamp)
	do @circleBrush1 :: @dc.makeLinearGradientBrush(
	|500.0, 50.0, 500.0, 150.0,
	|[0.0, 1.0],
	|[0xFFFF0000, 0xFF0000FF],
	|%normal, %clamp)
	do @circleBrush2 :: @dc.makeLinearGradientBrush(
	|500.0, 50.0, 500.0, 150.0,
	|[0.0, 1.0],
	|[0xFFFF0000, 0xFF0000FF],
	|%linear, %clamp)
	do @icecreamBrush :: @dc.makeLinearGradientBrush(
	|50.0, 180.0, 250.0, 220.0,
	|[0.0, 0.45, 1.0],
	|[0xFFAAFFBB, 0xFFFFFFCC, 0xFFFFCCCC],
	|%linear, %clamp)
	do @cornBrush :: @dc.makeLinearGradientBrush(
	|200.0, 200.0, 202.0, 210.0,
	|[0.0, 1.0],
	|[0xFFDDCC88, 0xFF998844],
	|%normal, %mirror)
	do @geo917Brush :: @dc.makeLinearGradientBrush(
	|600.0, 200.0, 200.0, 500.0,
	|[0.0, 0.48, 1.0],
	|[0xFFBBBBFF, 0xFF0000CC, 0xFFCCCCFF],
	|%linear, %clamp)
	do draw.onPaint :: @onPaint
	while(wnd@act())
	end while
end func

func onPaint(wnd: wnd@Wnd, width: int, height: int)
	do @dc.beginDraw()
	; k
	do @lineBrush.line(20.0, 20.0, 20.0, 100.0, 3.0, null)
	do @lineBrush.line(60.0, 40.0, 16.0, 80.0, 3.0, null)
	do @lineBrush.line(30.0, 77.0, 60.0, 100.0, 3.0, null)
	; u
	do @lineBrush.line(80.0, 50.0, 80.0, 100.0, 3.0, null)
	do @lineBrush.line(80.0, 98.5, 120.0, 98.5, 3.0, null)
	do @lineBrush.line(120.0, 100.0, 120.0, 50.0, 3.0, null)
	; i
	do @lineBrush.line(140.0, 40.0, 140.0, 100.0, 3.0, null)
	; n
	do @lineBrush.line(160.0, 50.0, 160.0, 100.0, 3.0, null)
	do @lineBrush.line(160.0, 51.5, 200.0, 51.5, 3.0, null)
	do @lineBrush.line(200.0, 50.0, 200.0, 100.0, 3.0, null)
	
	do @rectBrush1.rect(250.0, 20.0, 150.0, 120.0)
	do @rectBrush2.rectLine(250.0, 20.0, 150.0, 120.0, 5.0, null)
	
	do @circleBrush1.circle(500.0, 100.0, 50.0, 50.0)
	do @circleBrush2.circleLine(500.0, 100.0, 50.0, 50.0, 10.0, null)
	
	do @icecreamBrush.geometry(@icecream)
	do @cornBrush.tri(50.0, 250.0, 250.0, 250.0, 150.0, 500.0)
	
	do @geo917Brush.geometryLine(@geo917, 10.0, null)
	
	do @dc.endDraw()
end func
